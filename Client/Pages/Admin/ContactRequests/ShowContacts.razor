@page "/admin/contactrequests"
@using Application.Features.ContactRequests.Queries.GetAll
@attribute [Authorize(Policy = Permissions.ContactRequests.View)]

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<TheTitle Title="Contact Requests" Description="Viewing All Contact Requests" Icon="@CustomIcons.Contact" />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Hover="false" Dense="true" Bordered="true" Striped="true" Elevation="25" Items="_contactRequests" Filter="new Func<GetAllContactRequestsResponse, bool>(Search)" @bind-license="_contactRequest" CustomHeader="true">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => InvokeModal())" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface">Create</MudButton>
                <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetDataAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary" Style="margin-left: 5px;">Reload</MudButton>
            </div>
            <MudSpacer />
            @if (_canSearchContactRequests)
            {
                <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Contact Requests" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
            }
        </ToolBarContent>
        <HeaderContent>
            <MudTHeadRow IgnoreCheckbox="true">
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Id)">Id</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Message)">Message</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Notes)">Notes</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<GetAllContactRequestsResponse, object>(x => x.Contacted)">Contacted</MudTableSortLabel></MudTh>
                <MudTh Style="text-align: right">Actions</MudTh>
            </MudTHeadRow>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Email">
                <MudHighlighter Text="@context.Email" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Message">
                <MudHighlighter Text="@context.Message" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Notes">
                <MudHighlighter Text="@context.Notes" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Contacted">
                <MudCheckBox T="bool" @bind-Checked="@context.Contacted" />
            </MudTd>
            <MudTd DataLabel="Actions" Style="text-align: right">
                @if (_canEditContactRequests || _canDeleteContactRequests)
                {
                    <MudMenu Label="Actions" Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                        @if (_canEditContactRequests)
                        {
                            <MudMenuItem @onclick="@(() => InvokeModal(@context.Id))">Edit</MudMenuItem>
                        }
                        @if (_canDeleteContactRequests)
                        {
                            <MudMenuItem @onclick="@(() => Delete(@context.Id))">Delete</MudMenuItem>
                        }
                    </MudMenu>
                }
                else
                {
                    <MudButton Variant="Variant.Filled"
                               DisableElevation="true"
                               StartIcon="@Icons.Material.Filled.DoNotTouch"
                               IconColor="Color.Secondary"
                               Size="Size.Small"
                               Color="Color.Surface">
                        No Allowed Actions
                    </MudButton>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <TablePager />
        </PagerContent>
    </MudTable>
}