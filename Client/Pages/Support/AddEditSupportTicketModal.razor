@using Domain.Enums
<EditForm Model="@AddEditSupportTicketModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudDialog>
        <TitleContent>
            @{
                if (AddEditSupportTicketModel.Id == 0)
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        Add Support Ticket
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        Update Support Ticket
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                @if (AddEditSupportTicketModel.Id != 0)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField Disabled For="@(() => AddEditSupportTicketModel.Id)" @bind-Value="AddEditSupportTicketModel.Id" Label="Id" />
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField T="string" For="@(() => AddEditSupportTicketModel.Subject)" @bind-Value="AddEditSupportTicketModel.Subject" Label="Subject" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" For="@(() => AddEditSupportTicketModel.Description)" @bind-Value="AddEditSupportTicketModel.Description" Label="Description" Lines="3" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudSelect @bind-Value="EnumValue" Label="Priority">
                        @foreach (SupportPriority item in Enum.GetValues(typeof(SupportPriority)))
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudAutocomplete T="int" For="@(() => AddEditSupportTicketModel.SupportDepartmentId)" @bind-Value="AddEditSupportTicketModel.SupportDepartmentId" Label="Department" ResetValueOnEmptyText="true" SearchFunc="@SearchDepartments" Variant="Variant.Filled" ToStringFunc="@(i => _departments.FirstOrDefault(b => b.Id == i)?.Name ?? string.Empty)" OffsetY="true" />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
            @if (AddEditSupportTicketModel.Id != 0)
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@_disabled" Color="Color.Secondary">Update</MudButton>
            }
            else
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@_disabled" Color="Color.Success">Save</MudButton>
            }
        </DialogActions>
    </MudDialog>
</EditForm>